#include <iostream>
using namespace std;

typedef double (*FUNC)(double);

// Returns the area under the curve between x=a and x=b.
// The function passed as the first parameter determines the shape of the curve.
// Use a Riemann sum to estimate the area by dividing it into narrow rectangles (each rectangle should have a width of .0001)
// and adding up the areas of the individual rectangles.
// For a rectangle at horizontal position x, the height will be f(x).
// (when you call f(x) it'll call whatever function you passed as the first parameter)
double integrate(double (*f)(double), double a, double b, double width) {
   
  double total = 0;
  for (double x = a; x <= b; x += width){
    total += (f(x) * width);
  }

  return total;

}

double sum1(double (*f)(double), double a, double b, double width){
  return  f(a);
}


double line(double x){
   return x;
}

double square(double x){
   return x*x;
}

double cube(double x){
   return x*x*x;
}

int main() {
   cout << "The integral of f(x)=x between 0 and 1 is: " << integrate(line, 0, 1, .0000001) << endl;     // .5
   cout << "The integral of f(x)=x^2 between 1 and 5 is: " << integrate(square, 0, 5, .0001) << endl; // 41.6654
   cout << "The integral of f(x)=x^3 between 1 and 5 is: " << integrate(cube, 1, 5, .0001) << endl;   // 155.994
  // lambda function anonmous functions 
   cout << integrate([](double x){return (x*x + 1);}, 4, 5, .0001) << endl;     // 21.3355


   return 0;
}